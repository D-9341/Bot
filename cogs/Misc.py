import asyncio
import datetime
import os
import random
import re

import disnake
from disnake.ext import commands
from pymongo import MongoClient

passw = os.environ.get('passw')
cluster = MongoClient(f"mongodb+srv://cephalon:{passw}@locale.ttokw.mongodb.net/Locale?retryWrites=true&w=majority")
collection = cluster.Locale.locale

time_regex = re.compile(r"(?:(\d{1,5})(h|s|m|d))+?")
time_dict = {'h': 3600, 's': 1, 'm': 60, 'd': 86400}

friends = [351071668241956865, 417362845303439360]

guilds = [693929822543675455, 735874149578440855, 818758712163827723]

botversions = [764882153812787250, 694170281270312991, 762015251264569352]

class Slapper(commands.Converter):
    async def convert(self, ctx, argument):
        mention = random.choice(ctx.guild.members)
        emb = disnake.Embed(description = f'{argument}', colour = 0x2f3136, timestamp = ctx.message.created_at)
        emb.set_author(name = ctx.author, icon_url = ctx.author.avatar.url)
        return await ctx.send(f'@someone ||{mention.mention}||', embed = emb)

class TimeConverter(commands.Converter):
    async def convert(self, ctx, argument):
        args = argument.lower()
        time = 0
        matches = re.findall(time_regex, args)
        for key, value in matches:
            try:
                time += time_dict[value] * float(key)
            except KeyError:
                await ctx.send(f'{value} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ: h|m|s|d')
            except ValueError:
                await ctx.send(f'{key} –Ω–µ —á–∏—Å–ª–æ!')
        return time

class Misc(commands.Cog):
    def __init__(self, client):
        self.client = client

    @commands.Cog.listener()
    async def on_ready(self):
        print('–ú–æ–¥—É–ª—å Misc –∑–∞–≥—Ä—É–∂–µ–Ω')

    @commands.command()
    @commands.cooldown(1, 60, commands.BucketType.guild)
    async def vote(self, ctx, *, text):
        emb = disnake.Embed(description = '–ì–û–õ–û–°–û–í–ê–ù–ò–ï', colour = disnake.Color.orange())
        emb.set_author(name = ctx.author, icon_url = ctx.author.avatar.url)
        emb.add_field(name = '–ì–æ–ª–æ—Å—É–µ–º –∑–∞:', value = text)
        emb.set_footer(text = 'üö´ - –≤–æ–∑–¥–µ—Ä–∂—É—Å—å')
        sent = await ctx.send(embed = emb)
        await sent.add_reaction('üëç')
        await sent.add_reaction('üëé')
        await sent.add_reaction('üö´')

    @commands.command()
    async def someone(self, ctx, text: Slapper):
        await ctx.send(embed = text)

    @commands.command()
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def rolemembers(self, ctx, role: disnake.Role, member: disnake.Member = None):
        emb = disnake.Embed(colour = disnake.Color.orange())
        if len(role.members) != 0:
            emb.add_field(name = f'–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å —Ä–æ–ª—å—é {role} ({len(role.members)})', value = ', '.join([member.mention for member in role.members]))
        else:
            emb.set_footer(text = '–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 0 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —ç—Ç–æ–π —Ä–æ–ª—å—é.')
        await ctx.send(embed = emb)

    @commands.command()
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def guild(self, ctx):
        guild = ctx.guild
        emb = disnake.Embed(colour = disnake.Color.orange(), timestamp = disnake.utils.utcnow())
        emb.set_author(name = guild, icon_url = guild.icon_url)
        emb.add_field(name = 'ID —Å–µ—Ä–≤–µ—Ä–∞', value = guild.id)
        emb.add_field(name = '–ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–≥–∏–æ–Ω', value = guild.region)
        emb.add_field(name = '–í–ª–∞–¥–µ–ª–µ—Ü', value = guild.owner.mention)
        emb.add_field(name = '–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤', value = guild.member_count)
        emb.add_field(name = '–ò–∑ –Ω–∏—Ö –±–æ—Ç–æ–≤', value = len(list(filter(lambda m: m.bot, guild.members))))
        emb.add_field(name = '–ò–∑ –Ω–∏—Ö –ª—é–¥–µ–π', value = len(list(filter(lambda m: not m.bot, guild.members))))
        emb.add_field(name = '–ö–∞–Ω–∞–ª–æ–≤', value = f'–¢–µ–∫—Å—Ç–æ–≤—ã—Ö {len(guild.text_channels)} | –ì–æ–ª–æ—Å–æ–≤—ã—Ö {len(guild.voice_channels)}')
        roles = ', '.join([role.name for role in guild.roles[1:]])
        emb.add_field(name = f'–†–æ–ª–∏ ({len(guild.roles)-1})', value = roles, inline = False)
        now = datetime.datetime.today()
        then = guild.created_at
        delta = now - then
        d = guild.created_at.strftime('%d.%m.%Y %H:%M:%S UTC')
        emb.add_field(name = '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞', value = f'{delta.days} –¥–Ω–µ–π –Ω–∞–∑–∞–¥. ({d})', inline = False)
        emb.set_thumbnail(url = guild.icon_url)
        await ctx.send(embed = emb)

    @commands.command()
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def roleinfo(self, ctx, role: disnake.Role):
        if role.mentionable == False:
            role.mentionable = '–ù–µ—Ç'
        elif role.mentionable == True:
            role.mentionable = '–î–∞'
        if role.managed == False:
            role.managed = '–ù–µ—Ç'
        elif role.managed == True:
            role.managed = '–î–∞'
        if role.hoist == False:
            role.hoist = '–ù–µ—Ç'
        elif role.hoist == True:
            role.hoist = '–î–∞'
        emb = disnake.Embed(title = role.name, colour = role.colour)
        emb.add_field(name = 'ID', value = role.id)
        emb.add_field(name = '–¶–≤–µ—Ç', value = role.color)
        emb.add_field(name = '–£–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è?', value = role.mentionable)
        emb.add_field(name = '–£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π?', value = role.managed)
        emb.add_field(name = '–ü–æ–∑–∏—Ü–∏—è –≤ —Å–ø–∏—Å–∫–µ', value = role.position)
        now = datetime.datetime.today()
        then = role.created_at
        delta = now - then
        d = role.created_at.strftime('%d.%m.%Y %H:%M:%S GMT')
        emb.add_field(name = '–°–æ–∑–¥–∞–Ω–∞', value = f'{delta.days} –¥–Ω—è(–µ–π) –Ω–∞–∑–∞–¥. ({d})', inline = False)
        emb.add_field(name = '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ç–¥–µ–ª—å–Ω–æ?', value = role.hoist)
        await ctx.send(embed = emb)

    @commands.command(aliases = ['av'])
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def avatar(self, ctx, member: disnake.User = None):
        if member == None:
            member = ctx.author
        emb = disnake.Embed(colour = 0x2f3136)
        if not member.avatar.is_animated():
            emb.set_image(url = member.avatar.with_format('png'))
        else:
            emb.set_image(url = member.avatar.url)
        emb.set_author(name = member)
        await ctx.send(embed = emb)

    @commands.command(aliases = ['me'])
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def about(self, ctx, member: disnake.Member = None):
        if member == None:
            member = ctx.author
        if member.nick == None:
            member.nick = '–ù/–î'
        if member.bot == False:
            bot = '–ù–µ–∞'
        elif member.bot == True:
            bot = '–ê–≥–∞'
        emb = disnake.Embed(colour = member.color, timestamp = disnake.utils.utcnow())
        emb.set_author(name = member)
        emb.add_field(name = 'ID', value = member.id)
        now = datetime.datetime.today()
        then = member.created_at
        delta = now - then
        d = member.created_at.strftime('%d.%m.%Y %H:%M:%S UTC')
        then1 = member.joined_at
        delta1 = now - then1
        d1 = member.joined_at.strftime('%d.%m.%Y %H:%M:%S UTC')
        emb.add_field(name = '–°–æ–∑–¥–∞–Ω', value = f'{delta.days} –¥–Ω—è(–µ–π) –Ω–∞–∑–∞–¥. ({d})', inline = False)
        emb.add_field(name = '–í–æ—à—ë–ª', value = f'{delta1.days} –¥–Ω—è(–µ–π) –Ω–∞–∑–∞–¥. ({d1})', inline = False)
        emb.add_field(name = '–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ', value = member.mention)
        emb.add_field(name = 'Raw –∏–º—è', value = member.name)
        emb.add_field(name = '–ù–∏–∫–Ω–µ–π–º', value = member.nick)
        if member.status == disnake.Status.online:
            status = '–í —Å–µ—Ç–∏'
        elif member.status == disnake.Status.dnd:
            status = '–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å'
        elif member.status == disnake.Status.idle:
            status = '–ù–µ –∞–∫—Ç–∏–≤–µ–Ω'
        elif member.status == disnake.Status.offline:
            status = '–ù–µ –≤ —Å–µ—Ç–∏'
        emb.add_field(name = '–°—Ç–∞—Ç—É—Å', value = status)
        roles = ', '.join([role.name for role in member.roles[1:]])
        emb.add_field(name = '–ë–æ—Ç?', value = bot)
        limit = len(member.roles)
        if limit > 1:
            emb.add_field(name = f'–†–æ–ª–∏ ({len(member.roles)-1})', value = roles, inline = False)
            emb.add_field(name = '–í—ã—Å—à–∞—è –†–æ–ª—å', value = member.top_role.mention, inline = False)
        emb.set_thumbnail(url = member.avatar.url)
        await ctx.send(embed = emb)

    @commands.command()
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def remind(self, ctx, time: TimeConverter, *, text):
        emb = disnake.Embed(colour = ctx.author.color, timestamp = disnake.utils.utcnow())
        emb.add_field(name = '–ù–∞–ø–æ–º–Ω—é —á–µ—Ä–µ–∑', value = f'{time}s')
        emb.add_field(name = '–û —á—ë–º –Ω–∞–ø–æ–º–Ω—é?', value = text)
        await ctx.send(embed = emb, delete_after = time)
        await asyncio.sleep(time)
        emb = disnake.Embed(colour = ctx.author.color, timestamp = disnake.utils.utcnow())
        emb.add_field(name = '–ù–∞–ø–æ–º–Ω–∏–ª —á–µ—Ä–µ–∑', value = f'{time}s')
        emb.add_field(name = '–ù–∞–ø–æ–º–∏–Ω–∞—é –æ', value = text)
        await ctx.send(f'{ctx.author.mention}', embed = emb)

def setup(client):
    client.add_cog(Misc(client))
