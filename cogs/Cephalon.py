import asyncio
import secrets
import sys

import discord
from functions import translate, get_locale, set_locale, get_plural_form, get_command_help
from discord.ext import commands

uptime = discord.utils.utcnow()

class GrayButton(discord.ui.Button):
    def __init__(self, label):
        super().__init__(label = label, style = discord.ButtonStyle.gray)

class RedButton(discord.ui.Button):
    def __init__(self, label):
        super().__init__(label = label, style = discord.ButtonStyle.red)

class Cephalon(commands.Cog):
    def __init__(self, client):
        self.client = client

    @commands.Cog.listener()
    async def on_ready(self):
        print('–ú–æ–¥—É–ª—å Cephalon –∑–∞–≥—Ä—É–∂–µ–Ω')

    @commands.command()
    async def help(self, ctx, command = None):
        if command is None:
            emb = discord.Embed(description = '–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã', color = 0xff8000)
            emb.set_author(name = self.client.user.name, url = 'https://discord.com/api/oauth2/authorize?client_id=694170281270312991&permissions=8&scope=bot%20applications.commands')
            emb.add_field(name = 'Cephalon', value = '`botver`, `devs`, `help`, `info`, `invite`, `locale`, `ping`, `uptime`', inline = False)
            emb.add_field(name = 'Embeds', value = '`content`, `edit`, `say`', inline = False)
            emb.add_field(name = 'Fun', value = '`aghanim`, `dotersbrain`, `roulette`', inline = False)
            emb.add_field(name = 'Mod', value = '`ban`, `clear`, `dm`, `deaf`, `give`, `kick`, `mute`, `take`, `timeout`, `undeaf`, `unmute`', inline = False)
            emb.add_field(name = 'Misc', value = '`about`, `avatar`, `coinflip`, `roll`, `roleinfo`, `rolemembers`, `serverinfo`, `someone`', inline = False)
            emb.add_field(name = 'Music', value = '`join`, `leave`, `play`, `pause`, `resume`, `stop`') # , `volume`
            emb.add_field(name = '·Ö†', value = '–£–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥—ã –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –¥—Ä—É–≥–æ–≥–æ', inline = False)
            emb.add_field(name = '·Ö†', value = '–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `[] <> /` –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã', inline = False)
            emb.add_field(name = '·Ö†', value = '**–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ** `cy/help [–∫–æ–º–∞–Ω–¥–∞]` **–¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.**\n\n**[–°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ](https://discord.com/api/oauth2/authorize?client_id=694170281270312991&permissions=8&scope=bot%20applications.commands)**', inline = False)
            emb.set_footer(text = 'Cephalon Cy ¬©Ô∏è Sus&Co\n2020 - Present')
            return await ctx.send(embed = emb)
        locale = get_locale(ctx.author.id)
        return await ctx.send(embed = discord.Embed(description = (get_command_help(locale, command)), color = 0xff8000))

    @commands.command()
    async def uptime(self, ctx):
        now = discord.utils.utcnow()
        up_time = now - uptime
        hours, remainder = divmod(up_time.seconds, 3600)
        minutes, seconds = divmod(remainder, 60)
        await ctx.send(embed = discord.Embed(description = f'–Ø –≤ —Å–µ—Ç–∏ —É–∂–µ `{hours} —á, {minutes} –º, {seconds} —Å`', color = 0xff8000))

    @commands.command()
    async def guilds(self, ctx):
        if ctx.author.id not in self.client.owner_ids:
            raise commands.NotOwner()
        client_guilds = self.client.guilds
        client_guilds = '\n'.join([guild.name for guild in self.client.guilds])
        await ctx.send(embed = discord.Embed(description = f'–°—É—â–µ—Å—Ç–≤—É—é –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö ({len(self.client.guilds)}):\n{client_guilds}', color = 0xff8000))

    @commands.command()
    async def reset(self, ctx, command):
        if ctx.author.id not in self.client.owner_ids:
            raise commands.NotOwner()
        command = self.client.get_command(command)
        if not command.is_on_cooldown(ctx):
            return await ctx.send(embed = discord.Embed(description = '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ', color = 0xff8000))
        await ctx.send(embed = discord.Embed(description = f'–°—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏ –¥–ª—è `{command.name}` —Å–±—Ä–æ—à–µ–Ω. –°—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏ –±—ã–ª —Ä–∞–≤–µ–Ω `{round(command.get_cooldown_retry_after(ctx))}` {get_plural_form(round(command.get_cooldown_retry_after(ctx))), ['—Å–µ–∫—É–Ω–¥–∞', '—Å–µ–∫—É–Ω–¥—ã', '—Å–µ–∫—É–Ω–¥']}', color = 0xff8000))
        await command.reset_cooldown(ctx)

    @commands.command() # ru, gnida, en
    async def locale(self, ctx):
        locale = get_locale(ctx.author.id)
        rbutton = GrayButton('RU')
        gbutton = RedButton('GNIDA')
        ebutton = GrayButton('EN')
        tbutton = GrayButton('TEST' if locale == 'en' else '–¢–ï–°–¢')
        ibutton = GrayButton('INFO' if locale == 'en' else '–ò–ù–§–û')
        ybutton = RedButton('YES' if locale == 'en' else '–î–ê')
        nbutton = GrayButton('NO' if locale == 'en' else '–ù–ï–¢')
        confirm = discord.ui.View(timeout = 5)
        confirm.add_item(ybutton)
        confirm.add_item(nbutton)
        view = discord.ui.View(timeout = 5)
        view.add_item(rbutton)
        view.add_item(gbutton)
        if ctx.author.id in self.client.owner_ids:
            view.add_item(ebutton)
        view.add_item(tbutton)
        view.add_item(ibutton)
        async def rbutton_callback(interaction):
            set_locale(str(ctx.author.id), 'ru')
            return await interaction.response.edit_message(embed = discord.Embed(description = '–í–∞—à–∞ –ª–æ–∫–∞–ª—å –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ `ru`', color = 0xff8000), view = None)
        async def gbutton_callback(interaction):
            await interaction.response.edit_message(embed = discord.Embed(description = '–¢—ã –±–ª—è —É–≤–µ—Ä–µ–Ω?', color = 0xff8000), view = confirm)
        async def ybutton_callback(interaction):
            set_locale(str(ctx.author.id), 'gnida')
            return await interaction.response.edit_message(embed = discord.Embed(description = '–¢–≤–æ—è —ë–±–∞–Ω–∞—è –ª–æ–∫–∞–ª—å –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ `gnida`!', color = 0xff8000), view = None)
        async def nbutton_callback(interaction):
            return await interaction.response.edit_message(embed = discord.Embed(description = '–ù—É –æ–∫', color = 0xff8000), view = None)
        async def ebutton_callback(interaction):
            set_locale(str(ctx.author.id), 'en')
            return await interaction.response.edit_message(embed = discord.Embed(description = 'Your locale has been set to `en`', color = 0xff8000), view = None)
        async def test_callback(interaction):
            return await interaction.response.edit_message(embed = discord.Embed(description = translate(locale, 'locale_test'), color = 0xff8000), view = None)
        async def info_callback(interaction):
            return await interaction.response.edit_message(content = None, embed = discord.Embed(description = translate(locale, 'locale_info'), color = 0xb00b69), view = None)
        rbutton.callback = rbutton_callback
        gbutton.callback = gbutton_callback
        ebutton.callback = ebutton_callback
        tbutton.callback = test_callback
        ibutton.callback = info_callback
        ybutton.callback = ybutton_callback
        nbutton.callback = nbutton_callback
        if locale == 'ru':
            rbutton.disabled = True
        if locale == 'gnida':
            gbutton.disabled = True
        if locale == 'en':
            ebutton.disabled = True
        try:
            msg = await ctx.send(embed = discord.Embed(description = translate(locale, 'locale_options'), color = 0xff8000), view = view)
            await self.client.wait_for('message_edit', check = lambda message: message.author.id == ctx.author.id and message.id == msg.id, timeout = 10)
        except asyncio.TimeoutError:
            await msg.edit(embed = discord.Embed(description = '–í—Ä–µ–º—è –≤—ã—à–ª–æ', color = 0xff8000), view = None)

    @commands.command()
    async def generate(self, ctx):
        if ctx.author.id not in self.client.owner_ids:
            raise commands.NotOwner()
        token = '-'.join([''.join([secrets.choice('QWERTYUIOPASDFGHJKLZXCVBNM1234567890') for _ in range(5)]) for _ in range(3)])
        await ctx.send(f'```{token}```')

    @commands.command()
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def info(self, ctx):
        emb = discord.Embed(title = '–ü–∞—Ä—É —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞ —Å—é–¥–∞, –Ω–æ–≤—ã–µ —Ñ–∏—à–∫–∏ —Ç—É–¥–∞', description = '–°–æ–∑–¥–∞—Ç–µ–ª–∏ –±–æ—Ç–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É—é—Ç —Å–≤–æ—ë –¥–µ—Ç–∏—â–µ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è –µ–≥–æ –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏', color = 0xff8000)
        emb.set_author(name = self.client.user.name, url = 'https://warframe.fandom.com/wiki/Cephalon_Cy', icon_url = self.client.user.avatar.url)
        emb.add_field(name = '–í–µ—Ä—Å–∏—è', value = '0.13.0.2.21680')
        emb.add_field(name = '–ù–∞–ø–∏—Å–∞–Ω –Ω–∞', value = f'discord.py v{discord.__version__}\nPython v{sys.version[:7]}')
        emb.add_field(name = '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ üá∑üá∫', value = '[—Å–∞—Å–∏—Å–∫–∞](https://discord.com/users/338714886001524737)\n[Prokaznik](https://discord.com/users/417012231406878720)')
        emb.add_field(name = '–û–±—Å–ª—É–∂–∏–≤–∞—é', value = f'{len(self.client.users)} —á–µ–ª–æ–≤–µ–∫')
        emb.add_field(name = '–°—É—â–µ—Å—Ç–≤—É—é –Ω–∞', value = f'{len(self.client.guilds)} —Å–µ—Ä–≤–µ—Ä–∞—Ö')
        emb.set_footer(text = '–î–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–æ –∏–≥—Ä–æ–π Warframe', icon_url = 'https://i.playground.ru/p/yVaOZNSTdgUTxmzy_qvzzQ.png')
        await ctx.send(embed = emb)

    @commands.command()
    @commands.cooldown(1, 15, commands.BucketType.user)
    async def devs(self, ctx):
        emb = discord.Embed(description = '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–æ—Ç–∞, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ —á–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã Sus&Co', color = 0xff8000)
        emb.add_field(name = '—Å–∞—Å–∏—Å–∫–∞', value = '–ü–µ—Ä–≤–∏—á–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞, –ø–æ —Å–æ–≤–º–µ—Å—Ç–∏—Ç–µ–ª—å—Å—Ç–≤—É –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å Sus&Co. –î–µ–ª–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ä–∞–±–æ—Ç—É', inline = False)
        emb.add_field(name = '–ü—Ä–æ–∫–∞–∑–Ω–∏–∫', value = '–ü—Ä–∏—á–∞—Å—Ç–µ–Ω –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ª–æ–∫–∞–ª–∏ gnida, –ø–æ–º–æ–≥–∞–µ—Ç —Å –∏–¥–µ—è–º–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞. –•–æ—Ç—å –∏ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º, –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–¥—É', inline = False)
        await ctx.send(embed = emb)

    @commands.command()
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def invite(self, ctx, arg = None):
        if arg is None:
            emb = discord.Embed(description = '[–°—Å—ã–ª–∫–∞](https://discord.com/oauth2/authorize?client_id=694170281270312991&permissions=8&scope=bot%20applications.commands) –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è Cy –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞', color = 0xff8000)
            await ctx.send(embed = emb)
        if arg == 'beta':
            emb = discord.Embed(description = '[–°—Å—ã–ª–∫–∞](https://discord.com/oauth2/authorize?client_id=764882153812787250&permissions=8&scope=bot%20applications.commands) –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è Cy Beta –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞', color = 0xff8000)
            await ctx.send(embed = emb)
        if arg == 'pro':
            if ctx.author.id not in self.client.owner_ids:
                raise commands.NotOwner()
            emb = discord.Embed(description = '[–°—Å—ã–ª–∫–∞](https://discord.com/oauth2/authorize?client_id=762015251264569352&permissions=8&scope=bot%20applications.commands) –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è Cy PRO –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞', color = 0xff8000)
            await ctx.send(embed = emb)

    @commands.command()
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def ping(self, ctx):
        emb = discord.Embed(description = '`–ü–æ–ª—É—á–∞—é..`', color = 0xff8000)
        emb1 = discord.Embed(description = f'Pong!  `{round(self.client.latency * 1000)} ms`', color = 0xff8000)
        message = await ctx.send(embed = emb)
        await asyncio.sleep(self.client.latency)
        await message.edit(embed = emb1)

    @commands.command()
    async def botver(self, ctx):
        emb = discord.Embed(color = 0x2f3136)
        emb.add_field(name = '0.13.0.2.21680', value = '- –ë—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è Fun (4 –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥—ã)\n- –î–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∫–æ–º–∞–Ω–¥ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å–ª—ç—à (/) –≤–µ—Ä—Å–∏—è\n–û—Ç —Å–µ–±—è —Ö–æ—á–µ—Ç—Å—è –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Fun –ø–æ—è–≤–∏–ª–∞—Å—å –ù–ï–í–ï–†–û–Ø–¢–ù–ê–Ø –∫–æ–º–∞–Ω–¥–∞ - dotersbrain\n\n–í—Å—ë —ë–ø—Ç–∞, —Ç–∞–∫–æ–π –≤–æ—Ç –ø–∞—Ç—á –≤—ã—à–µ–ª. –°–ª–µ–¥—É—é—â–∏–π –∂–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –≥–æ–¥ (~~–ó–∞–≤—Ç—Ä–∞~~)')
        emb.set_footer(text = '–ù–∞–ø–∏—Å–∞–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –ü—Ä–æ–∫–∞–∑–Ω–∏–∫#2785')
        await ctx.send(embed = emb)

async def setup(client):
    await client.add_cog(Cephalon(client))
